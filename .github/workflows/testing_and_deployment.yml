name: Unit Tests, Build & Deploy Library

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'

jobs:
  build:
    if: contains(github.event.head_commit.message, '[AUTO]') == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12.9"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose librdkafka-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install ".[dev]"

      - name: Create Docker network
        run: docker network create local-kafka-network

      - name: Start Kafka and ksqlDB
        working-directory: ./tests
        run: docker-compose up -d

      - name: Wait for Kafka and ksqlDB to be ready
        run: |
          echo "Waiting for Kafka to be ready..."
          until docker exec kafka1 kafka-topics --bootstrap-server kafka1:29092 --list > /dev/null 2>&1; do
            sleep 5
          done
          echo "Waiting for ksqlDB to be ready..."
          until [[ "$(curl -s http://localhost:8088/info | jq -r '.KsqlServerInfo.serverStatus')" == "RUNNING" ]]; do
            sleep 5
          done

      - name: Set Project Root Environment Variable
        run: echo "PROJECT_ROOT=$(pwd)" >> $GITHUB_ENV

      - name: Create required directories and list contents
        run: |
          mkdir -p config logs
          echo "Directory contents:"
          ls -l

      - name: Run all PyTests
        run: pytest -s -vv

  pypi-publish:
    needs: build
    name: Upload Release to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.9

      - name: Install build tools and dev dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build bumpver setuptools
          python -m pip install ".[dev]"

      - name: Configure Git
        run: |
          git config --local user.email "brayan@brayan.com"
          git config --local user.name "svabra"

      - name: Bump version
        if: contains(github.event.head_commit.message, '[AUTO]') == false
        run: bumpver update --patch --commit-message "[AUTO] Bump version"

      - name: Build package
        run: python -m build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
